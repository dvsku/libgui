CMAKE_MINIMUM_REQUIRED(VERSION 3.14)

OPTION(LIBGUI_BUILD_EXAMPLES "Build examples."        ON)
OPTION(LIBGUI_BUILD_OPENGL2  "Build the OpenGL2 lib." ON)
OPTION(LIBGUI_BUILD_OPENGL3  "Build the OpenGL3 lib." ON)

PROJECT(libgui)

GET_DIRECTORY_PROPERTY(PARENT_DIR PARENT_DIRECTORY)
IF(PARENT_DIR STREQUAL "")
    SET(LIBGUI_TOP_LEVEL TRUE)
ELSE()
    SET(LIBGUI_TOP_LEVEL FALSE)
ENDIF()

IF(POLICY CMP0135)
    CMAKE_POLICY(SET CMP0135 NEW)
ENDIF()

SET(LIBGUI_LIBRARIES "${PROJECT_SOURCE_DIR}/libraries")

IF(WIN32)
    IF(MSVC)
        IF(LIBGUI_TOP_LEVEL)
            SET(CMAKE_C_FLAGS           "/W3 /utf-8")
            SET(CMAKE_C_FLAGS_DEBUG     "/MTd /Od /Ob0 /RTC1 /Zi")
            SET(CMAKE_C_FLAGS_RELEASE   "/MT /O2 /Ob2 /GL /DNDEBUG")

            SET(CMAKE_CXX_FLAGS         "/std:c++20 /DWIN32 /D_WINDOWS /W3 /EHsc /GR /GL-")
            SET(CMAKE_CXX_FLAGS_DEBUG   "/MTd /Od /Ob0 /RTC1 /Zi")
            SET(CMAKE_CXX_FLAGS_RELEASE "/MT /O2 /Ob2 /DNDEBUG")

            SET(OUTPUT_DIR "binaries/${CMAKE_BUILD_TYPE}")
            STRING(TOLOWER ${OUTPUT_DIR} OUTPUT_DIR_LOWER)

            SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/${OUTPUT_DIR_LOWER}")
            SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/${OUTPUT_DIR_LOWER}")
            SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/${OUTPUT_DIR_LOWER}")
        ENDIF()

        ADD_SUBDIRECTORY("dependencies")
        ADD_SUBDIRECTORY("source")

        IF(LIBGUI_TOP_LEVEL AND LIBGUI_BUILD_EXAMPLES)
            ADD_SUBDIRECTORY("examples")
        ENDIF()
    ELSE()
        MESSAGE(FATAL_ERROR "${CMAKE_CXX_COMPILER_ID} currently not supported.")
    ENDIF()
ENDIF()
